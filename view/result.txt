<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- ui css? -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/kossyak/csmjs@latest/ui/style.min.css" type="text/css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/kossyak/eden@latest/styles/eden.min.css" type="text/css"/>
    <script src="https://cdn.jsdelivr.net/gh/lestejs/leste@latest/bundlers/leste.global.min.js"></script>
    <style>
        body {
            margin: 0;
            font-family: Arial;
            font-size: 15px;
            max-height: 100vh;
        }
        *, :before, :after {
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <div id="root"></div>
    <script type="module" defer>
      import Eden from 'https://cdn.jsdelivr.net/gh/kossyak/eden@latest/eden.min.js'
      const eden = new Eden(root)
      import csm from 'https://cdn.jsdelivr.net/gh/kossyak/csmjs@latest/csm.min.js'
      import ui from 'https://cdn.jsdelivr.net/gh/kossyak/csmjs@latest/ui/ui.js'
      const leste = new Leste({ root })

      const notify = (v) => console.log(v)


      window.result = async (code) => {
        try {
          eden.reset()
          csm.off()
          csm.on('_create', async (entry) => {
            root.unmount && await root.unmount()
            await leste.mount(ui, {
              params: { name: entry.name },
              methods: {
                action: (action) => csm.action(action)
            }})
          })
          csm.on('_destroy', () => leste.unmount())
          csm.on('_change', (arg) => root.method.change(arg))
          new Function('notify', 'eden', 'csm', 'leste', code)(notify, eden, csm, leste)
        } catch (err) {
          console.log(err)
        }
      }
    </script>
</body>
</html>